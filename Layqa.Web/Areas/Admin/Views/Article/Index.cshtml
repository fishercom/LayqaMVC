@model IEnumerable<Layqa.Web.Areas.Admin.Models.ArticleListViewModel>
@using Layqa.Service
@using Layqa.Service.Dto
@{
    ServiceTemplate serviceTemplate = new ServiceTemplate();
    ServiceSchema serviceSchema = new ServiceSchema();
    ServiceArticle serviceArticle = new ServiceArticle();

    IEnumerable<SchemaTemplateDto> TemplateList = ViewBag.TemplateList;
    ArticleDto ArticleParent = ViewBag.ArticleParentId != null ? serviceArticle.GetItem(ViewBag.ArticleParentId) : null;
    
    if (ArticleParent != null) {
        ViewBag.Title = ArticleParent.Title;
    }
    else
    {
        ViewBag.Title = "Páginas";
    }
}
<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">

        <h2>
            @if (ArticleParent != null)
            {
                @ViewBag.Title <a href="@Url.Action("Edit", new { Id = ViewBag.ArticleParentId })" class="btn btn-warning btn-sm"><i class="fa fa-fw fa-edit"></i> Editar</a>
            }
            else
            {
                @ViewBag.Title
            }
        </h2>

        <p>
            @if (TemplateList.Count() > 1)
            {
                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#wTemplate">Crear Artículo</button>
            }
            else
                if (TemplateList.Count() == 1)
                {
                    var templ = TemplateList.FirstOrDefault();
                    var count = Model.Where(a => a.SchemaId == templ.SchemaId).Count();
                    if (templ.Iterations == null || count < templ.Iterations)
                    {
                        @Html.ActionLink("Crear Artículo", "Create", new { SchemaId = TemplateList.FirstOrDefault().SchemaId, ArticleParentId = ViewBag.ArticleParentId }, new { @class = "btn btn-success" })
                    }
                    else
                    {
                        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#wTemplate">Crear Artículo</button>
                    }
                }
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessage("Error", new { @class = "text-danger" })
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegisterDate)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                var SchemaList = serviceSchema.GetList(item.SchemaId);
                <tr>
                    <td>
                        @if (SchemaList.Count() > 0)
                        {
                            @Html.ActionLink(item.Title, "Index", new { SchemaId = item.SchemaId, ArticleParentId = item.ArticleId })
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Title)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegisterDate)
                    </td>
                    <td>
                        <a href="@Url.Action("Edit", new { Id = item.ArticleId })" class="btn btn-warning btn-sm"><i class="fa fa-fw fa-edit"></i> Editar</a>
                        <a href="@Url.Action("Delete", new { Id = item.ArticleId })" class="btn btn-danger btn-sm" data-ajax="true" data-ajax-method="Get" data-ajax-mode="replace" data-ajax-update="#DeleteForm" data-target="#DeleteForm" data-toggle="modal"><i class="fa fa-fw fa-trash"></i> Eliminar</a>
                    </td>
                </tr>
            }

        </table>

        @if (ArticleParent != null)
        {
            <a href="@Url.Action("Index", new { SchemaId = ArticleParent.Schema.SchemaParentId, ArticleParentId = ArticleParent.ArticleParentId })" class="btn btn-default btn-sm"><i class="fa fa-fw fa-backward"></i> Regresar</a>
        }

        <div id="DeleteForm"
             class="modal fade"
             tabindex="-1"
             role="dialog"
             aria-hidden="true">
        </div>

        <!-- Template List -->
        <div id="wTemplate" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Plantillas</h4>
                    </div>
                    <div class="modal-body">
                        <p>Seleccione una de las plantillas:</p>

                        <ul>
                            @foreach (var templ in TemplateList)
                            {
                                var TemplateName = templ.SchemaAlias != null ? templ.SchemaAlias : templ.TemplateName;
                                var count = Model.Where(a => a.SchemaId == templ.SchemaId).Count();
                                <li>
                                    @if (templ.Iterations == null || count < templ.Iterations)
                                    { 
                                        @Html.ActionLink(TemplateName, "Create", new { SchemaId = templ.SchemaId, ArticleParentId = ViewBag.ArticleParentId })
                                    }
                                    else
                                    {
                                        <del>@TemplateName</del>
                                    }
                                </li>
                            }
                        </ul>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<!-- /.row -->

@section Scripts{
    @Scripts.Render("~/bundles/unobtrusiveajax")
}
